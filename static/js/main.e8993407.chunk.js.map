{"version":3,"sources":["components/book-list/index.js","components/book-list/book-list.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/withBookstoreService.js","utils/compose.js","actions/book-list.js","containers/book-list-container.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","actions/shopping-cart.js","containers/book-list-item-container.js","components/search-panel/index.js","components/search-panel/search-panel.js","actions/filter.js","containers/search-panel-container.js","components/shop-header/index.js","components/shop-header/shop-header.js","containers/shop-header-container.js","components/buttons/back-to-store.js","components/shopping-cart-table-row/index.js","components/shopping-cart-table-row/shopping-cart-table-row.js","components/shopping-cart-table/index.js","components/shopping-cart-table/shopping-cart-table.js","containers/shopping-cart-table-container.js","components/sorting-block/index.js","components/sorting-block/sorting-block.js","containers/sorting-block-container.js","routes.js","components/pages/home-page.js","components/pages/cart-page.js","components/pages/not-found-page.js","components/app/index.js","components/app/app.js","containers/app-container.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/filter.js","reducers/index.js","store.js","middlewares/string-middleware.js","index.js"],"names":["BookList","books","Grid","Column","stretched","width","Card","Group","itemsPerRow","map","book","index","key","Spinner","Loader","active","inline","className","ErrorIndicator","Message","negative","compact","Header","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","compose","funcs","comp","reduceRight","wrapped","fun","setBooks","type","payload","fetchBooks","dispatch","getBooks","then","response","data","catch","error","booksError","BookListContainer","this","loading","onAddedToCart","Component","sortBy","filterBy","orderBy","searchBooks","term","length","filter","title","toLowerCase","indexOf","author","connect","bookList","bindActionCreators","BookListItem","particularBook","id","price","image","rating","Image","src","alt","ui","Content","Meta","extra","Rating","icon","maxRating","Icon","name","Button","onClick","color","count","bookAddedToCart","bookId","updateShoppingCart","cartItems","orderTotal","numItems","mapDispatchToProps","shoppingCart","item","shift","SearchPanel","onSearch","Menu","Item","Input","fluid","placeholder","value","onChange","event","target","setFilter","ShopHeader","to","animated","hidden","visible","withRouter","history","push","ShoppingCartTableRow","idx","onDecrease","onIncrease","onDelete","total","ShoppingCartTable","items","onClearCart","SortingBlock","tabular","text","vertical","header","disabled","size","routes","path","isExact","component","App","role","route","exact","AppContainer","saveToLocalStorage","localStorage","setItem","JSON","stringify","getFromLocalStorage","parse","getItem","ErrorBoundry","state","hasError","setState","children","BookstoreService","axios","get","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateFilter","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8993407.chunk.js","sourcesContent":["import BookList from \"./book-list\";\r\n\r\nexport default BookList","import React from 'react'\r\nimport { Grid, Card } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { BookListItemContainer } from '../../containers'\r\n\r\nconst BookList = ({ books }) => {\r\n    return (\r\n        <Grid.Column stretched width={13}>\r\n            <Card.Group itemsPerRow={4}>\r\n                {\r\n                    books.map((book, index) => {\r\n                        return (\r\n                            <BookListItemContainer key={index}\r\n                                                   book={book} />\r\n                        )\r\n                    })\r\n                }\r\n            </Card.Group>\r\n        </Grid.Column>\r\n    )\r\n}\r\n\r\nBookList.propTypes = {\r\n    books: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default BookList","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner","import React from 'react'\r\nimport { Loader } from 'semantic-ui-react'\r\n\r\nimport './spinner.scss'\r\n\r\nconst Spinner = () => {\r\n    return(\r\n        <Loader active\r\n                inline='centered'\r\n                className='spinner'>\r\n                    Загрузка...\r\n        </Loader>\r\n    )\r\n}\r\n\r\nexport default Spinner","import ErrorIndicator from './error-indicator'\r\n\r\nexport default ErrorIndicator","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nimport './error-indicator.scss'\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <Message negative compact className='error-indicator'>\r\n            <Message.Header>Произошла ошибка!</Message.Header>\r\n            <p>Пожалуйста, перезагрузите страницу...</p>\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator","import React from 'react'\r\n\r\nconst {\r\n    Provider: BookstoreServiceProvider,\r\n    Consumer: BookstoreServiceConsumer\r\n} = React.createContext()\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n}","import React from 'react'\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context'\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return <Wrapped {...props} \r\n                                        bookstoreService={bookstoreService} \r\n                                        />\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withBookstoreService","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, fun) => fun(wrapped), comp)\r\n}\r\n\r\nexport default compose","const booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    }\r\n}\r\n\r\nconst booksLoaded = newBooks => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksError = error => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const setBooks = books => {\r\n    return {\r\n        type: 'SET_BOOKS',\r\n        payload: books\r\n    }\r\n}\r\n\r\nexport const fetchBooks = bookstoreService => () => dispatch => {\r\n    dispatch(booksRequested())\r\n    bookstoreService.getBooks()\r\n        .then(response => dispatch(booksLoaded(response.data)))\r\n        .catch(error => dispatch(booksError(error)))\r\n}\r\n","import React, { Component } from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport orderBy from 'lodash/orderBy'\r\n\r\nimport BookList from '../components/book-list'\r\nimport Spinner from '../components/spinner'\r\nimport ErrorIndicator from '../components/error-indicator'\r\nimport { withBookstoreService } from '../components/hoc'\r\n\r\nimport { compose } from '../utils'\r\n\r\nimport { fetchBooks } from '../actions/book-list'\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks()\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props\r\n\r\n        if (loading)\r\n            return <Spinner />\r\n\r\n        if (error)\r\n            return <ErrorIndicator />\r\n\r\n        return <BookList books={books}\r\n                         onAddedToCart={onAddedToCart} />\r\n    }\r\n}\r\n\r\nconst sortBy = (books, filterBy) => {\r\n    switch (filterBy) {\r\n        case 'all':\r\n            return books\r\n        case 'popularity':\r\n            return orderBy(books, 'rating', 'desc')\r\n        case 'low-price':\r\n            return orderBy(books, 'price', 'asc')\r\n        case 'high-price':\r\n            return orderBy(books, 'price', 'desc')\r\n        case 'bookName':\r\n            return orderBy(books, 'title', 'asc')\r\n        case 'author':\r\n            return orderBy(books, 'author', 'asc')\r\n        default:\r\n            return books\r\n    }\r\n}\r\n\r\nconst searchBooks = (books, term) => {\r\n    if (term.length === 0) {\r\n        return books;\r\n    }\r\n    return books.filter(book => {\r\n        return (book.title.toLowerCase().indexOf(term) > -1 ||\r\n            book.author.toLowerCase().indexOf(term) > -1);\r\n    });\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error }, \r\n                           filter:   { term, filterBy } }) => {\r\n    return { \r\n        books: books &&\r\n                sortBy(\r\n                    searchBooks(books, term.toLowerCase()), \r\n                    filterBy),\r\n        loading, \r\n        error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n    return bindActionCreators({\r\n        fetchBooks: fetchBooks(bookstoreService)\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer)","import BookListItem from './book-list-item'\r\n\r\nexport default BookListItem","import React from 'react'\r\nimport { Card, Icon, Image, Button, Rating } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './book-list-item.scss'\r\n\r\nconst BookListItem = ( { book, onAddedToCart, particularBook } ) => {\r\n    \r\n    const { id, title, author, price, image, rating } = book\r\n\r\n    return (\r\n        <Card>\r\n            <div className=\"cover-image\">\r\n                <Image src={image}\r\n                       alt='cover'\r\n                       ui={true} />\r\n            </div>\r\n            <Card.Content>\r\n                <Card.Header className='text-center'>{title}</Card.Header>\r\n                <Card.Meta className='mt7 text-center'>{author}</Card.Meta>\r\n            </Card.Content>\r\n            <Card.Content extra \r\n                          className='text-center'>\r\n                Рейтинг:&nbsp;&nbsp;\r\n                <Rating icon=\"star\" rating={rating} maxRating={5} />\r\n                &nbsp;&nbsp;{rating} / 5\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <div className='text-center price-color'>\r\n                    <Icon name=\"rub\" />\r\n                    <b>{price}</b>\r\n                </div>\r\n            </Card.Content>\r\n            <Button onClick={() => onAddedToCart(id)}\r\n                    color='green'>\r\n                Добавить в корзину {particularBook ? \r\n                                    `(${particularBook.count})`:\r\n                                    null}\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nBookListItem.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    onAddedToCart: PropTypes.func.isRequired,\r\n    particularBook: PropTypes.object\r\n}\r\n\r\nexport default BookListItem\r\n","export const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const updateShoppingCart = (cartItems, orderTotal, numItems) => {\r\n    return {\r\n        type: 'UPDATE_SHOPPING_CART',\r\n        payload: {\r\n            cartItems,\r\n            orderTotal,\r\n            numItems\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearShoppingCart = () => {\r\n    return {\r\n        type: 'CLEAR_SHOPPING_CART'\r\n    }\r\n}","import { connect } from 'react-redux'\r\n\r\nimport BookListItem from '../components/book-list-item'\r\n\r\nimport { bookAddedToCart } from '../actions/shopping-cart'\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems } }, props) => {\r\n    return { particularBook: (cartItems.filter(item => item.id === props.book.id)).shift() }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onAddedToCart: bookAddedToCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookListItem)","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport { Menu, Input } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './search-panel.scss';\r\n\r\nconst SearchPanel = ({ term, onSearch }) => {\r\n    return (\r\n        <Menu.Item>\r\n            <Input icon='search'\r\n                   fluid\r\n                   placeholder='Найти книгу...'\r\n                   value={term}\r\n                   onChange={event => onSearch(event.target.value)}\r\n                    />\r\n        </Menu.Item>\r\n    );\r\n};\r\n\r\nSearchPanel.propTypes = {\r\n    term: PropTypes.string.isRequired,\r\n    onSearch: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPanel","export const booksSearch = term => {\r\n    return {\r\n        type: 'BOOKS_SEARCH',\r\n        payload: term\r\n    }\r\n}\r\n\r\nexport const setFilter = filterBy => {\r\n    return {\r\n        type: 'SET_FILTER',\r\n        payload: filterBy\r\n    }\r\n}","import { connect } from 'react-redux';\r\n\r\nimport SearchPanel from '../components/search-panel'\r\n\r\nimport { booksSearch } from '../actions/filter';\r\n\r\nconst mapStateToProps = ({ filter: { term } }) => {\r\n    return { term }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onSearch: booksSearch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPanel)","import ShopHeader from \"./shop-header\";\r\n\r\nexport default ShopHeader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './shop-header.scss'\r\n\r\nconst ShopHeader = ( { numItems, orderTotal } ) => {\r\n    return (\r\n        <header className='shop-header'>\r\n            \r\n            <Link to='/'>\r\n                <div className='logo text-dark'>Книжный магазин</div>\r\n            </Link>\r\n\r\n            <Link to='/cart'>\r\n                <Button animated='vertical'\r\n                        color='blue'\r\n                        className='shopping-cart-button'>\r\n                    <Button.Content hidden>Перейти в корзину</Button.Content>\r\n                    <Button.Content visible>\r\n                        [{numItems}] &nbsp;- &nbsp; \r\n                        <Icon name='shop'/>\r\n                        &nbsp; Итого: <b>{orderTotal} руб.</b>\r\n                    </Button.Content>\r\n                </Button>\r\n            </Link>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nShopHeader.propTypes = {\r\n    numItems: PropTypes.number.isRequired,\r\n    orderTotal: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ShopHeader","import { connect } from 'react-redux'\r\n\r\nimport ShopHeader from '../components/shop-header'\r\n\r\nconst mapStateToProps = ( { shoppingCart: { numItems, orderTotal }} ) => {\r\n    return {\r\n        numItems,\r\n        orderTotal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopHeader)","import React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst BackToStore = ( { history } ) => {\r\n    return (\r\n        <button className=\"btn btn-info\"\r\n            onClick={() => history.push('/')}>\r\n            Вернуться к каталогу\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default withRouter(BackToStore)","import ShoppingCartTableRow from './shopping-cart-table-row';\r\n\r\nexport default ShoppingCartTableRow","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './shopping-cart-table-row.scss'\r\n\r\nconst ShoppingCartTableRow = ({ item, idx, onDecrease, onIncrease, onDelete }) => {\r\n\r\n    const { id, title, count, total } = item\r\n    \r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx + 1}</td>\r\n        <td>{title}</td>\r\n        <td>\r\n          <button className=\"btn btn-sm\"\r\n                  onClick={() => onDecrease(id)}>\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n          &nbsp;&nbsp;\r\n          {count}\r\n          &nbsp;&nbsp;\r\n          <button className=\"btn btn-sm\"\r\n                  onClick={() => onIncrease(id)}>\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n        </td>\r\n        <td>{total} руб.</td>\r\n        <td className='table-actions'>\r\n          <button className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={() => onDelete(id)}>\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n}\r\n\r\nShoppingCartTableRow.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    total: PropTypes.number.isRequired\r\n  }).isRequired, \r\n  idx: PropTypes.number.isRequired, \r\n  onDecrease: PropTypes.func.isRequired, \r\n  onIncrease: PropTypes.func.isRequired, \r\n  onDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ShoppingCartTableRow","import ShoppingCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingCartTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { BackToStore } from '../buttons'\r\nimport ShoppingCartTableRow from '../shopping-cart-table-row'\r\n\r\nimport './shopping-cart-table.scss'\r\n\r\nconst ShoppingCartTable = ( { items, total, onIncrease, onDecrease, onDelete, onClearCart } ) => {\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Ваша корзина:</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>Книга</th>\r\n            <th>Количество</th>\r\n            <th>Общая сумма</th>\r\n            <th>Удалить книгу</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {\r\n            items.map((item, idx) => <ShoppingCartTableRow item={item}\r\n                                                           key={idx}\r\n                                                           idx={idx}\r\n                                                           onIncrease={onIncrease}\r\n                                                           onDecrease={onDecrease}\r\n                                                           onDelete={onDelete}/>)\r\n          }\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">\r\n        Итого: {total} руб.\r\n      </div>\r\n\r\n      <div className='main-actions'>\r\n        <BackToStore/>\r\n        <button className=\"btn btn-danger\"\r\n          onClick={() => onClearCart()}\r\n          >\r\n          Очистить корзину\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nShoppingCartTable.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired, \r\n  total: PropTypes.number.isRequired, \r\n  onIncrease: PropTypes.func.isRequired, \r\n  onDecrease: PropTypes.func.isRequired, \r\n  onDelete: PropTypes.func.isRequired, \r\n  onClearCart: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ShoppingCartTable","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport ShoppingCartTable from '../components/shopping-cart-table'\r\nimport { BackToStore } from '../components/buttons'\r\n\r\nimport {\r\n    allBooksRemovedFromCart,\r\n    bookRemovedFromCart,\r\n    bookAddedToCart,\r\n    clearShoppingCart\r\n} from '../actions/shopping-cart'\r\n\r\nconst ShoppingCartTableContainer = ({ items, total, onIncrease, onDecrease, onDelete, onClearCart }) => {\r\n\r\n    if (items.length === 0)\r\n        return (\r\n            <div className='text-center empty-shopping-cart'>\r\n                <h3>Ваша корзина пуста.</h3>\r\n                <p>\r\n                    Выберите нужный Вам товар из каталога интернет-магазина\r\n                    и добавьте его в корзину.\r\n                </p>\r\n                <BackToStore />\r\n            </div>\r\n        )\r\n    \r\n    return <ShoppingCartTable items={items}\r\n                              total={total}\r\n                              onIncrease={onIncrease}\r\n                              onDecrease={onDecrease}\r\n                              onDelete={onDelete}\r\n                              onClearCart={onClearCart}/>\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onIncrease: bookAddedToCart,\r\n    onDecrease: bookRemovedFromCart,\r\n    onDelete: allBooksRemovedFromCart,\r\n    onClearCart: clearShoppingCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTableContainer)\r\n","import SortingBlock from \"./sorting-block\";\r\n\r\nexport default SortingBlock","import React from 'react'\r\nimport { Grid, Menu, Button } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { SearchPanelContainer } from '../../containers'\r\n\r\nconst SortingBlock = ({ setFilter, filterBy }) => {\r\n\r\n    return (\r\n        <Grid.Column width={3}>\r\n            <SearchPanelContainer />\r\n            <Menu fluid tabular text vertical>\r\n                <Menu.Item header>Сортировать по:</Menu.Item>\r\n                <Menu.Item\r\n                    active={filterBy === 'popularity'}\r\n                    onClick={() => setFilter('popularity')}\r\n                >Популярности</Menu.Item>\r\n                <Menu.Item\r\n                    active={filterBy === 'low-price'}\r\n                    onClick={() => setFilter('low-price')}\r\n                >Цене (сначала дешевые)</Menu.Item>\r\n                <Menu.Item\r\n                    active={filterBy === 'high-price'}\r\n                    onClick={() => setFilter('high-price')}\r\n                >Цене (сначала дорогие)</Menu.Item>\r\n                <Menu.Item\r\n                    active={filterBy === 'bookName'}\r\n                    onClick={() => setFilter('bookName')}\r\n                >Названию книги</Menu.Item>\r\n                <Menu.Item\r\n                    active={filterBy === 'author'}\r\n                    onClick={() => setFilter('author')}\r\n                >Автору</Menu.Item>\r\n            </Menu>\r\n            {\r\n                filterBy === 'all' || filterBy === null ? \r\n                <Button disabled\r\n                        size='small'>\r\n                    Отменить сортировку</Button> :\r\n                <Button onClick={() => setFilter('all')}\r\n                        size='small'>\r\n                    Отменить сортировку</Button>\r\n            }\r\n        </Grid.Column>\r\n    )\r\n}\r\n\r\nSortingBlock.propTypes = {\r\n    setFilter: PropTypes.func.isRequired,\r\n    filterBy: PropTypes.string.isRequired\r\n}\r\n\r\nexport default SortingBlock\r\n","import { connect } from 'react-redux'\r\n\r\nimport SortingBlock from '../components/sorting-block'\r\n\r\nimport { setFilter } from '../actions/filter'\r\n\r\nconst mapStateToProps = ({ filter: { filterBy } }) => {\r\n    return { filterBy }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingBlock)","import {\r\n    HomePage,\r\n    CartPage,\r\n    NotFoundPage\r\n} from './components/pages'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        isExact: true,\r\n        component: HomePage\r\n    },\r\n    {\r\n        path: '/cart',\r\n        isExact: false,\r\n        component: CartPage\r\n    },\r\n    {\r\n        path: '*',\r\n        isExact: false,\r\n        component: NotFoundPage\r\n    },\r\n]","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nimport { BookListContainer, \r\n         SortingBlockContainer } from '../../containers'\r\n\r\nconst HomePage = () => {\r\n    return(\r\n        <Grid>\r\n            <SortingBlockContainer />\r\n            <BookListContainer />\r\n        </Grid> \r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nimport { ShoppingCartTableContainer } from '../../containers'\r\n\r\nconst CartPage = () => {\r\n    return <ShoppingCartTableContainer />\r\n}\r\n\r\nexport default CartPage","import React from 'react'\r\n\r\nconst NotFoundPage = () => {\r\n    return <h3 className='text-center'>Страница не найдена</h3>\r\n}\r\n\r\nexport default NotFoundPage","import App from './app'\r\n\r\nexport default App","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport { routes } from '../../routes'\r\nimport { ShopHeaderContainer } from '../../containers'\r\n\r\nconst App = () => {\r\n    return (\r\n        <main role='main' className='container'>\r\n\r\n            <ShopHeaderContainer />\r\n\r\n            <Switch>\r\n                {\r\n                    routes.map(route => {\r\n                        return (\r\n                            <Route\r\n                                key={route.path}\r\n                                exact={route.isExact}\r\n                                path={route.path}\r\n                                component={route.component}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Switch>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport App from '../components/app'\r\n\r\nimport { updateShoppingCart } from '../actions/shopping-cart'\r\nimport { setFilter } from '../actions/filter'\r\nimport { setBooks } from '../actions/book-list'\r\n\r\nclass AppContainer extends Component {\r\n\r\n    saveToLocalStorage = () => {\r\n        localStorage.setItem('cartItems', JSON.stringify(this.props.cartItems))\r\n        localStorage.setItem('orderTotal', JSON.stringify(this.props.orderTotal))\r\n        localStorage.setItem('numItems', JSON.stringify(this.props.numItems))\r\n        localStorage.setItem('filterBy', JSON.stringify(this.props.filterBy))\r\n        localStorage.setItem('books', JSON.stringify(this.props.books))\r\n    }\r\n\r\n    getFromLocalStorage = () => {\r\n        if (JSON.parse(localStorage.getItem('cartItems')) !== null)\r\n            this.props.updateShoppingCart(\r\n                JSON.parse(localStorage.getItem('cartItems')),\r\n                JSON.parse(localStorage.getItem('orderTotal')),\r\n                JSON.parse(localStorage.getItem('numItems'))\r\n            ) \r\n        if (JSON.parse(localStorage.getItem('filterBy')) !== 'all')\r\n            this.props.setFilter(\r\n                JSON.parse(localStorage.getItem('filterBy'))\r\n            )\r\n        this.props.setBooks(JSON.parse(localStorage.getItem('books')))             \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFromLocalStorage()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.saveToLocalStorage()\r\n    }\r\n\r\n    render() {\r\n        return <App />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal, numItems },\r\n                           filter: { filterBy },\r\n                           bookList: { books } }) => {\r\n    return { cartItems, orderTotal, numItems, filterBy, books }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        updateShoppingCart,\r\n        setFilter,\r\n        setBooks\r\n    }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer)","import ErrorBoundry from './error-boundry'\r\n\r\nexport default ErrorBoundry","import React, { Component } from \"react\"\r\nimport ErrorIndicator from '../error-indicator'\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    \r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.hasError)\r\n            return <ErrorIndicator />\r\n\r\n        return this.props.children\r\n\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport default class BookstoreService {\r\n  \r\n  getBooks() {\r\n    return axios.get('./books.json')\r\n  }\r\n\r\n}","const updateBookList = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return {\r\n        ...state.bookList,\r\n        books: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return {\r\n        ...state.bookList,\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return {\r\n        ...state.bookList,\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case 'SET_BOOKS':\r\n      return {\r\n        ...state.bookList,\r\n        books: action.payload\r\n      }\r\n\r\n    default:\r\n      return state.bookList;\r\n  }\r\n};\r\n\r\nexport default updateBookList;\r\n","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n  if (item.count === 0) {\r\n    return [\r\n      ...cartItems.slice(0, idx),\r\n      ...cartItems.slice(idx + 1)\r\n    ]\r\n  }\r\n\r\n  if (idx === -1) {\r\n    return [\r\n      ...cartItems,\r\n      item\r\n    ];\r\n  }\r\n\r\n  return [\r\n    ...cartItems.slice(0, idx),\r\n    item,\r\n    ...cartItems.slice(idx + 1)\r\n  ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n\r\n  const {\r\n    id = book.id,\r\n    count = 0,\r\n    title = book.title,\r\n    total = 0 } = item;\r\n\r\n  return {\r\n    id,\r\n    title,\r\n    count: count + quantity,\r\n    total: total + quantity * book.price\r\n  };\r\n};\r\n\r\nexport const updateOrder = (state, bookId, quantity) => {\r\n\r\n  const { bookList: { books }, shoppingCart: { cartItems }} = state;\r\n\r\n  const book = books.find(({id}) => id === bookId);\r\n  const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n  const item = cartItems[itemIndex];\r\n  const newItem = updateCartItem(book, item, quantity)\r\n\r\n  return {\r\n    ...state.shoppingCart,\r\n    numItems: state.shoppingCart.numItems + quantity,\r\n    orderTotal: state.shoppingCart.orderTotal + quantity * book.price,\r\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n  };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      orderTotal: 0,\r\n      numItems: 0\r\n    }\r\n  }\r\n\r\n  switch(action.type) {\r\n    case 'BOOK_ADDED_TO_CART':\r\n      return updateOrder(state, action.payload, 1);\r\n\r\n    case 'BOOK_REMOVED_FROM_CART':\r\n      return updateOrder(state, action.payload, -1);\r\n\r\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n      const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n      return updateOrder(state, action.payload, -item.count);\r\n\r\n    case 'UPDATE_SHOPPING_CART':\r\n      return {\r\n        ...state.shoppingCart,\r\n        cartItems: action.payload.cartItems,\r\n        orderTotal: action.payload.orderTotal, \r\n        numItems: action.payload.numItems \r\n      }\r\n\r\n    case 'CLEAR_SHOPPING_CART':\r\n      return {\r\n        ...state.shoppingCart,\r\n        cartItems: [],\r\n        orderTotal: 0,\r\n        numItems: 0\r\n      }\r\n    \r\n    default:\r\n      return state.shoppingCart;\r\n  }\r\n};\r\n\r\nexport default updateShoppingCart;","const updateFilter = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n      return {\r\n        term: '',\r\n        filterBy: 'all'\r\n      };\r\n    }\r\n  \r\n    switch (action.type) {\r\n      case 'BOOKS_SEARCH': \r\n        return {\r\n          ...state.filter,\r\n          term: action.payload\r\n        }\r\n  \r\n      case 'SET_FILTER':\r\n        return {\r\n          ...state.filter,\r\n          filterBy: action.payload\r\n        }\r\n  \r\n      default:\r\n        return state.filter;\r\n    }\r\n  };\r\n  \r\n  export default updateFilter;","import updateBookList from './book-list'\r\nimport updateShoppingCart from './shopping-cart'\r\nimport updateFilter from './filter'\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    bookList: updateBookList(state, action),\r\n    shoppingCart: updateShoppingCart(state, action),\r\n    filter: updateFilter(state, action)\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport reducer from './reducers'\r\nimport { stringMiddleware, loggerMiddleware } from './middlewares'\r\n\r\nconst store = createStore(reducer, \r\n                          applyMiddleware(\r\n                              thunkMiddleware,\r\n                              stringMiddleware\r\n                          ))\r\n\r\nexport default store","export const stringMiddleware = () => next => action => {\r\n    if (typeof action === 'string')\r\n            return next({\r\n                type: action\r\n            })\r\n    return next(action)\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\nimport { AppContainer } from './containers'\r\nimport ErrorBoundry from './components/error-boundry'\r\nimport BookstoreService from './services/bookstore-service'\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context'\r\n\r\nimport store from './store'\r\n\r\nconst bookstoreService = new BookstoreService()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <BookstoreServiceProvider value={bookstoreService}>\r\n        <Router>\r\n          <AppContainer />\r\n        </Router>\r\n      </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}